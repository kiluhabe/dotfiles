#!/usr/bin/env bash

# Save Screenshots here
screenshotdir=$HOME/Pictures/Screenshots
# file name
file=$screenshotdir/$(date '+%y%m%d-%H%M-%S').png
#make sure you have directory
[ -d "$screenshotdir" ] || mkdir -pv "$screenshotdir"

area=""
cwin=""
full=""
copy=""
save=""

rofiopt="$area\n$cwin\n$full"
rofi=$(printf "$rofiopt" | rofi -dmenu -i )
[ -z "$rofi" ] && exit
option="$save\n$copy"
saveopt=$(printf "$option" | rofi -dmenu -i )

case $rofi in
	"$area")
	if [ "$saveopt" = "$copy" ]; then
	notify-send --urgency low 'Select Area'
	maim -u -m 5 -s | xclip -selection clipboard -t image/png && notify-send --urgency low 'Screenshot copied' || notify-send 'failed to take screenshot'
  elif [ "$saveopt" = "$save" ]; then
	notify-send --urgency low 'Select Area'
	maim -u -m 5 -s $file && notify-send --urgency low 'Screenshot Taken' || notify-send 'failed to take screenshot'
	fi
	;;
	"$cwin")
	if [ "$saveopt" = "$copy" ]; then
	maim -u -m 5 -i "$(xdotool getactivewindow)" | xclip -selection clipboard -t image/png && notify-send --urgency low 'Screenshot copied' || notify-send 'failed to take screenshot'
  elif [ "$saveopt" = "$save" ]; then
	maim -u -m 5 -i "$(xdotool getactivewindow)" $file && notify-send --urgency low 'Screenshot Taken' || notify-send 'failed to take screenshot'
	fi
	;;
	"$full")
	if [ "$saveopt" = "$copy" ]; then
    sleep 2
	maim -u -m 5 | xclip -selection clipboard -t image/png && notify-send --urgency low 'Screenshot copied' || notify-send 'failed to take screenshot'
  elif [ "$saveopt" = "$save" ]; then
    sleep 2
	maim -u -m 5 $file && notify-send --urgency low 'Screenshot Taken' || notify-send 'failed to take screenshot'
	fi
	;;
esac
